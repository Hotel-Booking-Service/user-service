name: CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Assemble project
        run: ./gradlew assemble --no-daemon --info --build-cache

      - name: Upload initial build
        uses: actions/upload-artifact@v4
        with:
          name: build-initial
          path: build/
          retention-days: 1

  unit-tests:
    needs: build
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Download initial build
        uses: actions/download-artifact@v4
        with:
          name: build-initial
          path: build/

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run unit tests
        run: ./gradlew test --no-daemon --info --build-cache

      - name: Upload updated build
        uses: actions/upload-artifact@v4
        with:
          name: build-after-unit
          path: build/
          retention-days: 1

  integration-tests:
    needs: unit-tests
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Download build after unit tests
        uses: actions/download-artifact@v4
        with:
          name: build-after-unit
          path: build/

      - name: Load secrets from Vault via REST API
        env:
          VAULT_ADDR: https://vault.java-mp.space
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          RESPONSE=$(curl -sSL \
            --header "X-Vault-Token: $VAULT_TOKEN" \
            "$VAULT_ADDR/v1/kv/data/secret/data/ci/${{ github.event.repository.name }}")
          
          echo "$RESPONSE" | jq -r '.data.data | to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_ENV

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run integration tests
        run: ./gradlew integrationTest --no-daemon --info --build-cache

      - name: Generate JaCoCo Report
        run: ./gradlew jacocoTestReport --no-daemon

      - name: Upload final build
        uses: actions/upload-artifact@v4
        with:
          name: build-final
          path: build/
          retention-days: 1

      - name: Upload JaCoCo Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: |
            build/reports/jacoco/test/html/
            build/reports/jacoco/test/jacocoTestReport.xml
          retention-days: 7

  sonar:
    needs: integration-tests
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download final build
        uses: actions/download-artifact@v4
        with:
          name: build-final
          path: build/

      - name: Download JaCoCo Report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: |
            build/reports/jacoco/test/html/
            build/reports/jacoco/test/jacocoTestReport.xml

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: -Dproject.settings=./sonar-project.properties
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}